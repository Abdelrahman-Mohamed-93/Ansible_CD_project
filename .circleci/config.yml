version: 2.1
orbs:
  # Choose either one of the orbs below
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Define the jobs we want to run for this project
commands:
  destroy_environment:
      steps:
        - run:
            name: Destroy environment
            # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
            # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
            when: on_fail
            command: |
              aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1
  
#  configure_infrastructure: 
#      docker:
#        - image: python:3.7-alpine3.11
#      steps:
#        - checkout
#        - add_ssh_keys:
#            fingerprints: ["be:b0:27:ec:37:c1:32:b7:57:4f:29:92:f8:b8:3a:49"]
#        - run:
#            name: Install dependencies
#            command: |
#              # install the dependencies needed for your playbook
#              apk add --update ansible
#        - run:
#            name: Configure server
#            command: |
#              ansible-playbook main-connect.yml -i inventory
  
#  smoke_test:
#      docker:
#        - image: alpine:latest
#      steps:
#        - run: apk add --update curl
#        - run:
#            name: smoke test
#            command: |
#              URL="https://blog.udacity.com/"
#              # Test if website exists
#              if curl -s --head ${URL} 
#              then
#                return 0
#              else
#                return 1
#              fi
#        - destroy_environment 
  smoke_test_plus:
      docker:
        - image: amazon/aws-cli
      steps:
        - run:
            name: Test job
            # Fail the job intentionally to simulate an error.
            command:  return 1
        - destroy_environment 

# Sequential workflow
workflows:
  # Name the workflow
  infrastructure:
    jobs:
     - create_infrastructure
#      - configure_infrastructure
     - smoke_test_plus
        requires:
            create_infrastructure